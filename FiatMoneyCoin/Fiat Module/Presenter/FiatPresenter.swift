//
//  FiatPresenter.swift
//  FiatMoneyCoin
//
//  Created tambanco ðŸ¥³ on 28.06.2022.
//
//  Template generated by Tambanco
//

import Foundation
import UIKit

// MARK: Output protocol
protocol FiatViewProtocol: AnyObject {
    func addNewCurrency(value: String, symbol: String)
    func setupTotalValue(totalValue: String, earnValue: String, earnPercent: String)
}

// MARK: Input protocol
protocol FiatPresenterProtocol: AnyObject {
    func getCurrencyList()
    func caculateTotalFiat()
    func fetchCurrency()
    init(router: RouterProtocol, view: FiatViewProtocol, model:  FiatModel)
}

class FiatPresenter: FiatPresenterProtocol {
    
    
    weak var view: FiatViewProtocol?
    var router: RouterProtocol?
    var model: FiatModel
    
    func caculateTotalFiat() {
        let totalValue = 0
        let earnValue = 0
        let earnPercent = 0
        self.view?.setupTotalValue(totalValue: "\(totalValue)", earnValue: "\(earnValue)", earnPercent: "\(earnPercent) %")
    }
    
    func fetchCurrency() {
        guard let newValue = router?.currencyValue else { return }
        guard let newCurrency = router?.currencySymbol else { return }
        view?.addNewCurrency(value: newValue, symbol: newCurrency)
    }
    
    func getCurrencyList() {
        let currencyList = NetworkManager.getSymbols()
        router?.showCurrencyView(symbol: currencyList)
    }
    
    required init(router: RouterProtocol, view: FiatViewProtocol, model:  FiatModel) {
        self.view = view
        self.model = model
        self.router = router
    }
}
