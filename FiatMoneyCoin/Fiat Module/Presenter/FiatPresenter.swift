//
//  FiatPresenter.swift
//  FiatMoneyCoin
//
//  Created tambanco ðŸ¥³ on 28.06.2022.
//
//  Template generated by Tambanco
//

import Foundation
import UIKit

// MARK: Output protocol
protocol FiatViewProtocol: AnyObject {
    func updateFiatView()
}

// MARK: Input protocol
protocol FiatPresenterProtocol: AnyObject {
    var fiatCurrencyList: [FiatModel]? { get set }
    func showCurrencyView()
    func fetchCurrency()
    init(router: RouterProtocol, view: FiatViewProtocol, networkService: NetworkServiceProtocol)
}

class FiatPresenter: FiatPresenterProtocol {
    var totalValues: [Double] = []
    var fiatTotalSum: Double = 0
    var fiatTotalValue = FiatTotalModel(totalValue: 0, earnValue: 0, earnPercent: 0)
    var fiatCurrencyList: [FiatModel]? = []
    
    weak var view: FiatViewProtocol?
    var router: RouterProtocol?
    var networkService: NetworkServiceProtocol?
    
    func calculateTotalFiat(newValue: Double) {
        totalValues.append(newValue)
        fiatTotalSum = totalValues.reduce(0, +)
    }
    
    func fetchCurrency() {
        let newCurrencyValue = router?.currencyValue
        let newSymbolValue = router?.currencySymbol
        if newSymbolValue != nil {
            fiatCurrencyList?.append(FiatModel.init(valueForCell: newCurrencyValue, symbol: newSymbolValue))
            calculateTotalFiat(newValue: Double(newCurrencyValue ?? "0") ?? 0)
            view?.updateFiatView()
        }
    }
    func showCurrencyView() {
        router?.showCurrencyView()
    }
    
    required init(router: RouterProtocol, view: FiatViewProtocol, networkService: NetworkServiceProtocol) {
        self.view = view
        self.networkService = networkService
        self.router = router
    }
}
