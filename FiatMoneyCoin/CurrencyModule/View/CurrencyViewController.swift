//
//  CurrencyViewController.swift
//  FiatMoneyCoin
//
//  Created tambanco ðŸ¥³ on 05.07.2022.
//
//  Template generated by Tambanco
//

import UIKit

class CurrencyViewController: UIViewController {
    
    var presenter: CurrencyPresenterProtocol!
    
    var totalValue: String = ""
    var currencyList: [String] = []
    var amountValueForCell: String = ""
    var symbol: String = ""
    
    
    @IBOutlet weak var addCurrencyTF: UITextField!
    @IBOutlet weak var currencyPV: UIPickerView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.getCurrencyList()
        setupCurrencyView()
        setupPickerView()
    }
    
    func  setupCurrencyView() {
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillShow), name: UIResponder.keyboardWillShowNotification, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillHide), name: UIResponder.keyboardWillHideNotification, object: nil)
    }
    
    @objc func keyboardWillShow(notification: NSNotification) {
        if let keyboardSize = (notification.userInfo?[UIResponder.keyboardFrameEndUserInfoKey] as? NSValue)?.cgRectValue {
            self.view.frame.origin.y -= keyboardSize.height
        }
    }
    
    @objc func keyboardWillHide(notification: NSNotification) {
        self.view.frame.origin.y = 0
    }
    
    func setupPickerView() {
        currencyPV.delegate = self
        currencyPV.dataSource = self
    }
    
    @IBAction func cancelButton(_ sender: UIButton) {
        self.dismiss(animated: true)
    }
    
    @IBAction func addButton(_ sender: UIButton) {
        presenter.showFiatView(amount: amountValueForCell, symbol: symbol)
    }
}

// MARK: - Binding
extension CurrencyViewController: CurrencyViewProtocol {
    
    func present(viewControllerToPresent: UIViewController) {
        self.present(viewControllerToPresent, animated: true)
    }
    
    func setTotalValue(value: String, currencyList: [String]) {
        self.totalValue = value
        self.currencyList = currencyList
    }
}

extension CurrencyViewController: UIPickerViewDelegate, UIPickerViewDataSource {
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return currencyList.count
    }
    
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return currencyList[row]
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        symbol = currencyList[row] as String
        amountValueForCell = addCurrencyTF.text ?? "foo"
    }
}
